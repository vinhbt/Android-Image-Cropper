apply plugin: 'com.android.library'
// https://docs.gradle.org/current/userguide/publishing_maven.html
// http://www.flexlabs.org/2013/06/using-local-aar-android-library-packages-in-gradle-builds
// https://blog.codefx.org/tools/snapshots-gradle-maven-publish-plugin/
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven-publish'


group='com.sandinh'

ext {
    PUBLISH_GROUP_ID = 'com.sandinh'
    PUBLISH_ARTIFACT_ID = 'android-image-cropper'
    PUBLISH_VERSION = '2.4.8'
    PUBLISH_URL = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
    //gradlew clean build generateRelease
}



android {

    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 25
        versionCode 1
        versionName PUBLISH_VERSION
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
}


// This configuration is used to publish the library to a local repo while a being forked and modified.
// It should really be set up so that the version are all in line, and set to be a SNAPSHOT.
// The version listed here is a temp hack to allow me to keep working.
android.libraryVariants
publishing {
    publications {
        maven(MavenPublication) {

            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION + '-SNAPSHOT'

            artifact bundleRelease
            pom.withXml {
                // for dependencies and exclusions
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { ModuleDependency dp ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dp.group)
                    dependencyNode.appendNode('artifactId', dp.name)
                    dependencyNode.appendNode('version', dp.version)
                    dependencyNode.appendNode('scope', "compile")

                    // for exclusions
                    if (dp.excludeRules.size() > 0) {
                        def exclusions = dependencyNode.appendNode('exclusions')
                        dp.excludeRules.each { ExcludeRule ex ->
                            def exclusion = exclusions.appendNode('exclusion')
                            exclusion.appendNode('groupId', ex.group)
                            exclusion.appendNode('artifactId', ex.module)
                        }
                    }
                }
            }
        }
    }

}

apply from: '../.publishing/android-release-aar.gradle'

//apply from: 'https://raw.githubusercontent.com/vinhbt/release-android-library/master/android-release-aar.gradle'

dependencies {
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile "com.android.support:exifinterface:25.3.1"
}




